# Generated by Django 5.1.6 on 2025-06-05 16:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('explanation', models.TextField(blank=True, help_text='Explanation shown after answering')),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('short_answer', 'Short Answer'), ('essay', 'Essay'), ('matching', 'Matching'), ('fill_blank', 'Fill in the Blank'), ('code', 'Code Question')], default='multiple_choice', max_length=20)),
                ('points', models.PositiveSmallIntegerField(default=10)),
                ('order', models.PositiveIntegerField(default=0)),
                ('code_snippet', models.TextField(blank=True, help_text='Optional code snippet for this question')),
                ('code_language', models.CharField(blank=True, help_text='Programming language for the code', max_length=50)),
                ('matching_item_count', models.PositiveSmallIntegerField(default=0, help_text='Number of matching pairs')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
                ('explanation', models.TextField(blank=True)),
                ('matching_pair_id', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='quizzes.question')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('instructions', models.TextField(blank=True)),
                ('time_limit_minutes', models.PositiveSmallIntegerField(default=0, help_text='0 means no time limit')),
                ('passing_score', models.PositiveSmallIntegerField(default=70, help_text='Percentage required to pass')),
                ('max_attempts', models.PositiveSmallIntegerField(default=0, help_text='0 means unlimited attempts')),
                ('randomize_questions', models.BooleanField(default=True)),
                ('show_correct_answers', models.BooleanField(default=False, help_text='Show correct answers after submission')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='intermediate', max_length=15)),
                ('experience_points', models.PositiveIntegerField(default=50, help_text='XP awarded for passing')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_quizzes', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, related_name='quizzes', to='courses.tag')),
            ],
            options={
                'verbose_name': 'Quiz',
                'verbose_name_plural': 'Quizzes',
                'ordering': ['-created'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='quizzes.quiz'),
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('time_taken_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('score_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('passed', models.BooleanField(blank=True, null=True)),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('completed', 'Completed'), ('timed_out', 'Timed Out')], default='in_progress', max_length=15)),
                ('attempt_code', models.CharField(editable=False, max_length=10, unique=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='quizzes.quiz')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='MatchingItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left_text', models.CharField(max_length=255)),
                ('right_text', models.CharField(max_length=255)),
                ('pair_id', models.PositiveSmallIntegerField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matching_items', to='quizzes.question')),
            ],
            options={
                'unique_together': {('question', 'pair_id')},
            },
        ),
        migrations.CreateModel(
            name='QuestionResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_response', models.TextField(blank=True)),
                ('code_response', models.TextField(blank=True)),
                ('matching_response', models.JSONField(blank=True, default=dict)),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('earned_points', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('feedback', models.TextField(blank=True)),
                ('answered_at', models.DateTimeField(auto_now=True)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('graded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='graded_responses', to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizzes.question')),
                ('selected_answers', models.ManyToManyField(blank=True, related_name='responses', to='quizzes.answer')),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='quizzes.quizattempt')),
            ],
            options={
                'unique_together': {('attempt', 'question')},
            },
        ),
    ]
